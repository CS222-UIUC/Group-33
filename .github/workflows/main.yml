# This is a basic workflow to help you get started with Actions

name: Flutter_CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  FLUTTER_PROJ_DIR: flutter

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  format_lint_unit_tests:
    # The type of runner that the job will run on
    runs-on: macos-11

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        - uses: actions/checkout@v3
        - uses: subosito/flutter-action@v2
          with:
            channel: 'stable'
            cache: true
            cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
            cache-path: ${{ runner.tool_cache }}/flutter/':channel:-:version:-:arch:' # optional, change this to specify the cache path
            architecture: x64
        
        - name: Get Flutter dependencies
          run: cd $FLUTTER_PROJ_DIR && flutter pub get
        
        - name: Format Flutter files
          run: cd $FLUTTER_PROJ_DIR && flutter format --set-exit-if-changed .
        
        - name: Static code analysis
          run: cd $FLUTTER_PROJ_DIR && flutter analyze .
        
        - name: Run unit and widget tests
          run: cd $FLUTTER_PROJ_DIR && flutter test test
      
  android_integration_test:
    needs: format_lint_unit_tests
    runs-on: macos-11
    strategy:
      matrix:
        api-level:
          - 32
          # you can add more API level if you want to run your tests on different API
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
            channel: 'stable'
            cache: true
            cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
            cache-path: ${{ runner.tool_cache }}/flutter/':channel:-:version:-:arch:' # optional, change this to specify the cache path
            architecture: x64

      - name: Install Flutter dependencies
        run: cd $FLUTTER_PROJ_DIR && flutter pub get
        
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
          
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      
      - name: Run integration tests
        # more info on https://github.com/ReactiveCircus/android-emulator-runner
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: cd $FLUTTER_PROJ_DIR && flutter test integration_test --verbose
  
  
  code_coverage:
    needs: format_lint_unit_tests
    
    runs-on: macos-11
    
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
            channel: 'stable'
            cache: true
            cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
            cache-path: ${{ runner.tool_cache }}/flutter/':channel:-:version:-:arch:' # optional, change this to specify the cache path
            architecture: x64
      
      - name: Check Flutter version
        run: flutter --version

      - name: Generate test coverage
        run: cd $FLUTTER_PROJ_DIR && flutter test --coverage ./lib

      - name: Upload files to codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          directory: ${{ env.FLUTTER_PROJ_DIR }}/coverage/
